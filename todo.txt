libmysqlcppconn-dev libmysqlcooconn7 build steps
================================================

Trying C++ connector for MySQL. Built the packages libmysqlcppconn7 and libmysqlcppconn-dev from source, in order to compile and link against g++ 4.9:

   kurt@kurt-QAL51:/usr/local/src$ sudo apt-get source --compile mysql-connector-c++

Purge any previously installed versions

   kurt@kurt-QAL51:/usr/local/src$ sudo aptitude purge libmysqlcppconn7 libmysqlcppconn-dev 

Install the just-built .deb versions

 kurt@kurt-QAL51:/usr/local/src$ ls libmysqlcppconn* | xargs sudo dpkg -i


libmysqlcppconn-dev contains a static library that has the code for ::get_driver_instance(). So you will need to link with:

   -lmysql and -lmysqlcppconn

The example code is in the source package

   $ sudo apt-get source libmysqlcppconn-dev

The documentation is at http://dev.mysql.com/doc/connector-cpp/en/index.html

TODOes
======

copy-petition.txt is a partically "converted" version of the partition. It has the single quote marks that were not Latin-1- compatible converted to the Latin-1 '
character. It has had some similar minor corrections. 

Question: There are some Spandish characters that are not longer legible when converted from UTF8 to ISO-8859-1. The question is:
1. Should we simply retain the slightly-modified UTF8 verison of copy-petition.txt, and save it in the database at UTF8, since Lucene-Solor supposedly can handle
   UTF8, or 
2. Should the non-English remarks be converted to ISO-8859-1?

For more an overview of Unicode and command line techniques for converting it see. unicode.txt

Basic file modification steps.
==============================
Use copy-petition.csv and make sure this is done:

1. Doing dos2unix on file
2. Do iconv -f utf8 --to-encoding ISO-9959-1 to do basic single character changes, but not foreign language changes, to the files.
2. PHP under Tomcat 
-------------------

Other todoes
------------

* Read the mysql++ documentation at http://localhost/doc/libmysql++-doc/html/. Then try using a template query to do the insert.
* Read about move semantics to decide about "return" line at end of CsvReader::getMatches().

Finish C++11 version of database insert using mysql++3 to insert records and populate the petition database.

MySQL++ Class Library
=====================

$ sudo apt-get source --compile libmysql++-dev

This builds three .debs that can be installed by doing:

$ sudo dpkg -i libmysql++3_3.2.0+pristine-1_amd64.deb
$ sudo dpkg -i libmysql++-dev_3.2.0+pristine-1_amd64.deb
$ sudo dpkg -i libmysql++-doc_3.2.0+pristine-1_all.deb 

After installing update the apt and aptitude caches:

$ sudo apt-get update 
$ sudo aptitude update

Lucene++
========

$ sudo apt-get install  libboost-date-time-dev libboost-test-dev
$ sudo apt-get source --compile liblucene++-dev 

Then do the folowing: 

$ sudo dpkg -i liblucene++0_3.0.4-0ubuntu3_amd64.deb 
$ sudo dpkg -i liblucene++-contrib0_3.0.4-0ubuntu3_amd64.deb 
$ sudo dpkg -i liblucene++-dev_3.0.4-0ubuntu3_amd64.deb 
$ sudo dpkg -i liblucene++-doc_3.0.4-0ubuntu3_all.deb 
$ sudo dpkg -i <any others I forgot>

Links on Compiling and Linking
==============================

Links on How make and make install work
---------------------------------------

1. http://www.codecoffee.com/tipsforlinux/articles/27.html
2. http://stackoverflow.com/questions/528399/what-should-linux-unix-make-install-consist-of

Links on compiling, linking, includle and dll-library paths
-----------------------------------------------------------

* http://www.ibm.com/developerworks/library/l-lpic1-v3-102-3/  EXCELLENT
* http://www.yolinux.com/TUTORIALS/LibraryArchives-StaticAndDynamic.html
* http://www.tenouk.com/ModuleW.html
* https://www3.ntu.edu.sg/home/ehchua/programming/cpp/gcc_make.html
* https://www.gnu.org/software/gsl/manual/html_node/Using-the-library.html#Using-the-library
* http://unix.stackexchange.com/questions/67781/use-shared-libraries-in-usr-local-lib
